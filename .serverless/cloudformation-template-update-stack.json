{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "GlDashgetDashfileLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/growth-lab-api-dev-gl-get-file"
      }
    },
    "GlDashputDashfileLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/growth-lab-api-dev-gl-put-file"
      }
    },
    "GlDashgetDashfileLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/growth-lab-api/dev/1645858373184-2022-02-26T06:52:53.184Z/gl-get-file.zip"
        },
        "Handler": "get-file/index.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "growth-lab-api-dev-gl-get-file",
        "MemorySize": 128,
        "Timeout": 5,
        "Description": "Get file from S3 and data from DynamoDB",
        "Role": {
          "Fn::GetAtt": [
            "LambdaGetFileRole",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GlDashgetDashfileLogGroup",
        "LambdaGetFileRole"
      ]
    },
    "GlDashputDashfileLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/growth-lab-api/dev/1645858373184-2022-02-26T06:52:53.184Z/growth-lab-api.zip"
        },
        "Handler": "upload-gl/index.handler",
        "Runtime": "nodejs12.x",
        "FunctionName": "growth-lab-api-dev-gl-put-file",
        "MemorySize": 128,
        "Timeout": 5,
        "Description": "Put file to S3 and DynamoDB",
        "Role": {
          "Fn::GetAtt": [
            "LambdaPutFileRole",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "GlDashputDashfileLogGroup",
        "LambdaPutFileRole"
      ]
    },
    "GlDashputDashfileLambdaVersionjrA4y81hcV1kT4l2ghlI6GewSPEUWZbZj0zN2bxYsU": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GlDashputDashfileLambdaFunction"
        },
        "CodeSha256": "2oh/exxcjOIFQRi03ebSSCPPE8Ww0mOHIzUTKVSda/c=",
        "Description": "Put file to S3 and DynamoDB"
      }
    },
    "GlDashgetDashfileLambdaVersiont9bOhrnZ3yl2sjD1VE4zngjPuMa9qpEHlJjszlmojz4": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "GlDashgetDashfileLambdaFunction"
        },
        "CodeSha256": "2oh/exxcjOIFQRi03ebSSCPPE8Ww0mOHIzUTKVSda/c=",
        "Description": "Get file from S3 and data from DynamoDB"
      }
    },
    "HttpApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "dev-growth-lab-api",
        "ProtocolType": "HTTP"
      }
    },
    "HttpApiStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "StageName": "$default",
        "AutoDeploy": true,
        "DefaultRouteSettings": {
          "DetailedMetricsEnabled": false
        }
      }
    },
    "GlDashgetDashfileLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GlDashgetDashfileLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGlDashgetDashfile": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GlDashgetDashfileLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 5500
      }
    },
    "HttpApiRouteGetFileIdVar": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "GET /file/{id}",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGlDashgetDashfile"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGlDashgetDashfile"
    },
    "GlDashputDashfileLambdaPermissionHttpApi": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "GlDashputDashfileLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "HttpApi"
              },
              "/*"
            ]
          ]
        }
      }
    },
    "HttpApiIntegrationGlDashputDashfile": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::GetAtt": [
            "GlDashputDashfileLambdaFunction",
            "Arn"
          ]
        },
        "PayloadFormatVersion": "2.0",
        "TimeoutInMillis": 5500
      }
    },
    "HttpApiRoutePostUpload": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "HttpApi"
        },
        "RouteKey": "POST /upload",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "HttpApiIntegrationGlDashputDashfile"
              }
            ]
          ]
        }
      },
      "DependsOn": "HttpApiIntegrationGlDashputDashfile"
    },
    "S3Bucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketName": "growth-lab-bucket-files",
        "VersioningConfiguration": {
          "Status": "Enabled"
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "RestrictPublicBuckets": true
        },
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "LookupTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "_id",
            "AttributeType": "S"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "_id",
            "KeyType": "HASH"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "TableName": "LookUp"
      }
    },
    "LambdaGetFileRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/my/cust/path/",
        "RoleName": "LambdaGetFileRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "allow-get-item-from-s3-and-dynamodb",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:GetObject",
                    "s3:GetObjectAcl",
                    "s3:GetObject",
                    "s3:GetObjectVersionAcl",
                    "s3:GetObjectVersionAttributes",
                    "s3:GetObjectVersion"
                  ],
                  "Resource": "arn:aws:s3:::*/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Resource": "arn:aws:dynamodb:*:*:table/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:*:table/LookUp/index/*"
                }
              ]
            }
          }
        ]
      }
    },
    "LambdaPutFileRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "Path": "/my/cust/path/",
        "RoleName": "LambdaPutFileRole",
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": "allow-get-and-put-item-to-s3-and-dynamodb",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": "arn:aws:dynamodb:*:*:table/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:Scan",
                    "dynamodb:Query"
                  ],
                  "Resource": "arn:aws:dynamodb:us-east-1:*:table/LookUp/index/*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:ListTables"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-growth-lab-api-dev-ServerlessDeploymentBucketName"
      }
    },
    "GlDashputDashfileLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GlDashputDashfileLambdaVersionjrA4y81hcV1kT4l2ghlI6GewSPEUWZbZj0zN2bxYsU"
      },
      "Export": {
        "Name": "sls-growth-lab-api-dev-GlDashputDashfileLambdaFunctionQualifiedArn"
      }
    },
    "GlDashgetDashfileLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "GlDashgetDashfileLambdaVersiont9bOhrnZ3yl2sjD1VE4zngjPuMa9qpEHlJjszlmojz4"
      },
      "Export": {
        "Name": "sls-growth-lab-api-dev-GlDashgetDashfileLambdaFunctionQualifiedArn"
      }
    },
    "HttpApiId": {
      "Description": "Id of the HTTP API",
      "Value": {
        "Ref": "HttpApi"
      },
      "Export": {
        "Name": "sls-growth-lab-api-dev-HttpApiId"
      }
    },
    "HttpApiUrl": {
      "Description": "URL of the HTTP API",
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "HttpApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            }
          ]
        ]
      },
      "Export": {
        "Name": "sls-growth-lab-api-dev-HttpApiUrl"
      }
    }
  }
}